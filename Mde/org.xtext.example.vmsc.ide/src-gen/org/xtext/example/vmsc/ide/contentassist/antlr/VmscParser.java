/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.vmsc.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.vmsc.ide.contentassist.antlr.internal.InternalVmscParser;
import org.xtext.example.vmsc.services.VmscGrammarAccess;

public class VmscParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(VmscGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, VmscGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getVPackageAccess().getAlternatives_7(), "rule__VPackage__Alternatives_7");
			builder.put(grammarAccess.getVStructuralComponentAccess().getAlternatives(), "rule__VStructuralComponent__Alternatives");
			builder.put(grammarAccess.getVStructuralFeaturesAccess().getAlternatives(), "rule__VStructuralFeatures__Alternatives");
			builder.put(grammarAccess.getVTypeAccess().getAlternatives(), "rule__VType__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
			builder.put(grammarAccess.getVPackageAccess().getGroup(), "rule__VPackage__Group__0");
			builder.put(grammarAccess.getVPackageAccess().getGroup_8(), "rule__VPackage__Group_8__0");
			builder.put(grammarAccess.getVPackageAccess().getGroup_9(), "rule__VPackage__Group_9__0");
			builder.put(grammarAccess.getVPackageAccess().getGroup_10(), "rule__VPackage__Group_10__0");
			builder.put(grammarAccess.getVPackageAccess().getGroup_10_6(), "rule__VPackage__Group_10_6__0");
			builder.put(grammarAccess.getVEnumAccess().getGroup(), "rule__VEnum__Group__0");
			builder.put(grammarAccess.getVEnumAccess().getGroup_8(), "rule__VEnum__Group_8__0");
			builder.put(grammarAccess.getVDatatype_ImplAccess().getGroup(), "rule__VDatatype_Impl__Group__0");
			builder.put(grammarAccess.getVDatatype_ImplAccess().getGroup_8(), "rule__VDatatype_Impl__Group_8__0");
			builder.put(grammarAccess.getVClassAccess().getGroup(), "rule__VClass__Group__0");
			builder.put(grammarAccess.getVClassAccess().getGroup_8(), "rule__VClass__Group_8__0");
			builder.put(grammarAccess.getVClassAccess().getGroup_8_6(), "rule__VClass__Group_8_6__0");
			builder.put(grammarAccess.getVClassAccess().getGroup_9(), "rule__VClass__Group_9__0");
			builder.put(grammarAccess.getVClassAccess().getGroup_9_4(), "rule__VClass__Group_9_4__0");
			builder.put(grammarAccess.getVClassAccess().getGroup_10(), "rule__VClass__Group_10__0");
			builder.put(grammarAccess.getVClassAccess().getGroup_11(), "rule__VClass__Group_11__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getVAttributeAccess().getGroup(), "rule__VAttribute__Group__0");
			builder.put(grammarAccess.getVAttributeAccess().getGroup_15(), "rule__VAttribute__Group_15__0");
			builder.put(grammarAccess.getVAttributeAccess().getGroup_16(), "rule__VAttribute__Group_16__0");
			builder.put(grammarAccess.getVAttributeAccess().getGroup_17(), "rule__VAttribute__Group_17__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup(), "rule__VReference__Group__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_8(), "rule__VReference__Group_8__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_9(), "rule__VReference__Group_9__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_10(), "rule__VReference__Group_10__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_11(), "rule__VReference__Group_11__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_12(), "rule__VReference__Group_12__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_13(), "rule__VReference__Group_13__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_14(), "rule__VReference__Group_14__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_15(), "rule__VReference__Group_15__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_16(), "rule__VReference__Group_16__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_17(), "rule__VReference__Group_17__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_18(), "rule__VReference__Group_18__0");
			builder.put(grammarAccess.getVReferenceAccess().getGroup_19(), "rule__VReference__Group_19__0");
			builder.put(grammarAccess.getVStringAccess().getGroup(), "rule__VString__Group__0");
			builder.put(grammarAccess.getVIntAccess().getGroup(), "rule__VInt__Group__0");
			builder.put(grammarAccess.getVFloatAccess().getGroup(), "rule__VFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
			builder.put(grammarAccess.getVPackageAccess().getNameAssignment_6(), "rule__VPackage__NameAssignment_6");
			builder.put(grammarAccess.getVPackageAccess().getVPrefixAssignment_8_2(), "rule__VPackage__VPrefixAssignment_8_2");
			builder.put(grammarAccess.getVPackageAccess().getVUriAssignment_9_2(), "rule__VPackage__VUriAssignment_9_2");
			builder.put(grammarAccess.getVPackageAccess().getVComponentsAssignment_10_4(), "rule__VPackage__VComponentsAssignment_10_4");
			builder.put(grammarAccess.getVPackageAccess().getVComponentsAssignment_10_6_2(), "rule__VPackage__VComponentsAssignment_10_6_2");
			builder.put(grammarAccess.getVEnumAccess().getNameAssignment_6(), "rule__VEnum__NameAssignment_6");
			builder.put(grammarAccess.getVEnumAccess().getIsSerializableAssignment_8_0(), "rule__VEnum__IsSerializableAssignment_8_0");
			builder.put(grammarAccess.getVDatatype_ImplAccess().getNameAssignment_6(), "rule__VDatatype_Impl__NameAssignment_6");
			builder.put(grammarAccess.getVDatatype_ImplAccess().getIsSerializableAssignment_8_0(), "rule__VDatatype_Impl__IsSerializableAssignment_8_0");
			builder.put(grammarAccess.getVClassAccess().getNameAssignment_6(), "rule__VClass__NameAssignment_6");
			builder.put(grammarAccess.getVClassAccess().getVStructural_featuresAssignment_8_4(), "rule__VClass__VStructural_featuresAssignment_8_4");
			builder.put(grammarAccess.getVClassAccess().getVStructural_featuresAssignment_8_6_2(), "rule__VClass__VStructural_featuresAssignment_8_6_2");
			builder.put(grammarAccess.getVClassAccess().getVSuperTypeAssignment_9_3(), "rule__VClass__VSuperTypeAssignment_9_3");
			builder.put(grammarAccess.getVClassAccess().getVSuperTypeAssignment_9_4_1(), "rule__VClass__VSuperTypeAssignment_9_4_1");
			builder.put(grammarAccess.getVClassAccess().getIsAbstractAssignment_10_0(), "rule__VClass__IsAbstractAssignment_10_0");
			builder.put(grammarAccess.getVClassAccess().getIsInterfaceAssignment_11_0(), "rule__VClass__IsInterfaceAssignment_11_0");
			builder.put(grammarAccess.getVAttributeAccess().getNameAssignment_6(), "rule__VAttribute__NameAssignment_6");
			builder.put(grammarAccess.getVAttributeAccess().getIsChangeableAssignment_8(), "rule__VAttribute__IsChangeableAssignment_8");
			builder.put(grammarAccess.getVAttributeAccess().getIsOrderedAssignment_9(), "rule__VAttribute__IsOrderedAssignment_9");
			builder.put(grammarAccess.getVAttributeAccess().getIsTransientAssignment_10(), "rule__VAttribute__IsTransientAssignment_10");
			builder.put(grammarAccess.getVAttributeAccess().getIsUnsettableAssignment_11(), "rule__VAttribute__IsUnsettableAssignment_11");
			builder.put(grammarAccess.getVAttributeAccess().getIsVolatileAssignment_12(), "rule__VAttribute__IsVolatileAssignment_12");
			builder.put(grammarAccess.getVAttributeAccess().getIsDerivedAssignment_13(), "rule__VAttribute__IsDerivedAssignment_13");
			builder.put(grammarAccess.getVAttributeAccess().getIsUniqueAssignment_14(), "rule__VAttribute__IsUniqueAssignment_14");
			builder.put(grammarAccess.getVAttributeAccess().getLowerBoundAssignment_15_2(), "rule__VAttribute__LowerBoundAssignment_15_2");
			builder.put(grammarAccess.getVAttributeAccess().getUpperBoundAssignment_16_2(), "rule__VAttribute__UpperBoundAssignment_16_2");
			builder.put(grammarAccess.getVAttributeAccess().getVTypeAssignment_17_2(), "rule__VAttribute__VTypeAssignment_17_2");
			builder.put(grammarAccess.getVReferenceAccess().getNameAssignment_6(), "rule__VReference__NameAssignment_6");
			builder.put(grammarAccess.getVReferenceAccess().getIsChangeableAssignment_8_0(), "rule__VReference__IsChangeableAssignment_8_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsOrderedAssignment_9_0(), "rule__VReference__IsOrderedAssignment_9_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsTransientAssignment_10_0(), "rule__VReference__IsTransientAssignment_10_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsUnsettableAssignment_11_0(), "rule__VReference__IsUnsettableAssignment_11_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsVolatileAssignment_12_0(), "rule__VReference__IsVolatileAssignment_12_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsDerivedAssignment_13_0(), "rule__VReference__IsDerivedAssignment_13_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsUniqueAssignment_14_0(), "rule__VReference__IsUniqueAssignment_14_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsContainerAssignment_15_0(), "rule__VReference__IsContainerAssignment_15_0");
			builder.put(grammarAccess.getVReferenceAccess().getIsContainmentAssignment_16_0(), "rule__VReference__IsContainmentAssignment_16_0");
			builder.put(grammarAccess.getVReferenceAccess().getLowerBoundAssignment_17_2(), "rule__VReference__LowerBoundAssignment_17_2");
			builder.put(grammarAccess.getVReferenceAccess().getUpperBoundAssignment_18_2(), "rule__VReference__UpperBoundAssignment_18_2");
			builder.put(grammarAccess.getVReferenceAccess().getVTypeAssignment_19_2(), "rule__VReference__VTypeAssignment_19_2");
			builder.put(grammarAccess.getVStringAccess().getVContentAssignment_5(), "rule__VString__VContentAssignment_5");
			builder.put(grammarAccess.getVIntAccess().getVContentAssignment_5(), "rule__VInt__VContentAssignment_5");
			builder.put(grammarAccess.getVFloatAccess().getVContentAssignment_5(), "rule__VFloat__VContentAssignment_5");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private VmscGrammarAccess grammarAccess;

	@Override
	protected InternalVmscParser createParser() {
		InternalVmscParser result = new InternalVmscParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public VmscGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(VmscGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
